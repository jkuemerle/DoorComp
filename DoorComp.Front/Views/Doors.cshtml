@inherits ViewPage<DoorsResponse>

@{
    ViewBag.Title = string.Format("{0} Door Competition - Doors",Model.Event.Code);
}
<h1>Decorated Doors of @Model.Event.Description</h1>

<script id="doors-template" type="text/x-handlebars-template">
    <p>Here is the listing of the currenly decorated doors for {{Event.Description}}.</p>
    {{#if Event.IsOpen }}
    <p>Please vote for your favorites and if you see the door that you decorated then please claim it.</p>
    {{/if}}
    {{#unless Event.IsOpen }}
    <p>This event is currently closed so you cannot vote on or claim doors. Please feel free to take a look around.</p>
    {{/unless}}
    <p>See our <a href="/Events">events</a> page for a full listing of the events we are hosting.</p>
    <table>
        {{#each Pictures}}
        <tr>
            <td>
                <p><a href="/Door/{{ID}}"><img src="{{MediumURL}}" alt="{{ID}}" /></a></p>
                <p style="display:block; margin-left:auto; margin-right:auto">
                    <button value="Details" onclick="goTo('{{ID}}');">Details</button>&nbsp;&nbsp;&nbsp;
                    {{#if ../Event.IsOpen }}
                    <button value="Vote" onclick="vote('{{ID}}');">Vote</button>&nbsp;&nbsp;&nbsp;
                    <button value="Claim" onclick="showClaim('{{ID}}');">Claim</button>
                    {{/if}}
                </p>
                <hr/>
            </td>
        </tr>
        {{/each}}
    </table>
</script>

<div id="doors-content">

</div>

<script>
    var result = @Html.Raw(@ServiceStack.Text.JsonSerializer.SerializeToString(@Model));
    result.Pictures = shuffleArray(result.Pictures); 
    renderPage();

    function rerender() {
    }

    function renderPage() {
        var source = $("#doors-template").html();
        var template = Handlebars.compile(source);
        var html = template(result);
        $("#doors-content").html(html);
    }
</script>





